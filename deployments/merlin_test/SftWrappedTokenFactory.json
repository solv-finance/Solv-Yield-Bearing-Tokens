{
  "address": "0xF67F05996108917DF6Bbc17714E0436EB1cb5d84",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "governor_",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "oldAdmin",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newAdmin",
          "type": "address"
        }
      ],
      "name": "NewAdmin",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "string",
          "name": "productType",
          "type": "string"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "beacon",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "implementation",
          "type": "address"
        }
      ],
      "name": "NewBeacon",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "string",
          "name": "productType",
          "type": "string"
        },
        {
          "indexed": true,
          "internalType": "string",
          "name": "productName",
          "type": "string"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "beaconProxy",
          "type": "address"
        }
      ],
      "name": "NewBeaconProxy",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "oldGovernor",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newGovernor",
          "type": "address"
        }
      ],
      "name": "NewGovernor",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "string",
          "name": "productType",
          "type": "string"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "implementation",
          "type": "address"
        }
      ],
      "name": "NewImplementation",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "oldPendingAdmin",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newPendingAdmin",
          "type": "address"
        }
      ],
      "name": "NewPendingAdmin",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "oldPendingGovernor",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newPendingGovernor",
          "type": "address"
        }
      ],
      "name": "NewPendingGovernor",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "string",
          "name": "productType",
          "type": "string"
        },
        {
          "indexed": true,
          "internalType": "string",
          "name": "productName",
          "type": "string"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "beaconProxy",
          "type": "address"
        }
      ],
      "name": "RemoveBeaconProxy",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "wrappedSft",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "wrappedSftSlot",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sftWrappedToken",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "symbol",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "navOracle",
          "type": "address"
        }
      ],
      "name": "SftWrappedTokenCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "string",
          "name": "productType",
          "type": "string"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "beacon",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "TransferBeaconOwnership",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "string",
          "name": "productType",
          "type": "string"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "beacon",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "implementation",
          "type": "address"
        }
      ],
      "name": "UpgradeBeacon",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "acceptAdmin",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "acceptGovernance",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "admin",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "productType_",
          "type": "string"
        }
      ],
      "name": "deployBeacon",
      "outputs": [
        {
          "internalType": "address",
          "name": "beacon",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "productType_",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "productName_",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "tokenName_",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "tokenSymbol_",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "wrappedSft_",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "wrappedSftSlot_",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "navOracle_",
          "type": "address"
        }
      ],
      "name": "deployProductProxy",
      "outputs": [
        {
          "internalType": "address",
          "name": "proxy_",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "productType_",
          "type": "string"
        }
      ],
      "name": "getBeacon",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "productType_",
          "type": "string"
        }
      ],
      "name": "getImplementation",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "productType_",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "productName_",
          "type": "string"
        }
      ],
      "name": "getProxy",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "governor",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pendingAdmin",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pendingGovernor",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "productTypes",
      "outputs": [
        {
          "internalType": "address",
          "name": "implementation",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "beacon",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "productType_",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "productName_",
          "type": "string"
        }
      ],
      "name": "removeProductProxy",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "productType_",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "implementation_",
          "type": "address"
        }
      ],
      "name": "setImplementation",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "sftWrappedTokenInfos",
      "outputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "wrappedSft",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "wrappedSftSlot",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "navOracle",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "sftWrappedTokens",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newPendingAdmin_",
          "type": "address"
        }
      ],
      "name": "transferAdmin",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "productType_",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "newOwner_",
          "type": "address"
        }
      ],
      "name": "transferBeaconOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newPendingGovernor_",
          "type": "address"
        }
      ],
      "name": "transferGovernance",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "productType_",
          "type": "string"
        }
      ],
      "name": "upgradeBeacon",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xe85e0beaef4a791c5ebc0475dc60bfda43cc81feb0caba552165452fd29b368c",
  "receipt": {
    "to": null,
    "from": "0x4b2e4cAc67786778c79beCcC8c800E325Ab3bDDa",
    "contractAddress": "0xF67F05996108917DF6Bbc17714E0436EB1cb5d84",
    "transactionIndex": 0,
    "gasUsed": "2226476",
    "logsBloom": "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000040000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000200000000000000000000000040000000000000000000000000000000000000000000000000000000000000000040000000000000200000000000000000000000000000000080000000000000000000000000040000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000080000",
    "blockHash": "0xa57dad4b408c49124f84296e8c6eeead495107be3972032dc0c5e8aa134c539f",
    "transactionHash": "0xe85e0beaef4a791c5ebc0475dc60bfda43cc81feb0caba552165452fd29b368c",
    "logs": [
      {
        "transactionIndex": 0,
        "blockNumber": 3900654,
        "transactionHash": "0xe85e0beaef4a791c5ebc0475dc60bfda43cc81feb0caba552165452fd29b368c",
        "address": "0xF67F05996108917DF6Bbc17714E0436EB1cb5d84",
        "topics": [
          "0xf9ffabca9c8276e99321725bcb43fb076a6c66a54b7f21c4e8146d8519b417dc"
        ],
        "data": "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000004b2e4cac67786778c79beccc8c800e325ab3bdda",
        "logIndex": 0,
        "blockHash": "0xa57dad4b408c49124f84296e8c6eeead495107be3972032dc0c5e8aa134c539f"
      },
      {
        "transactionIndex": 0,
        "blockNumber": 3900654,
        "transactionHash": "0xe85e0beaef4a791c5ebc0475dc60bfda43cc81feb0caba552165452fd29b368c",
        "address": "0xF67F05996108917DF6Bbc17714E0436EB1cb5d84",
        "topics": [
          "0x1ba669d4a78521f2ad26e8e0fcbcdd626a63f34d68f326bc232a3abe2a5d042a"
        ],
        "data": "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000004b2e4cac67786778c79beccc8c800e325ab3bdda",
        "logIndex": 1,
        "blockHash": "0xa57dad4b408c49124f84296e8c6eeead495107be3972032dc0c5e8aa134c539f"
      }
    ],
    "blockNumber": 3900654,
    "cumulativeGasUsed": "2226476",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x4b2e4cAc67786778c79beCcC8c800E325Ab3bDDa"
  ],
  "numDeployments": 1,
  "solcInputHash": "b347b00a5fae9145344adf43c57499d6",
  "metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"governor_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"NewAdmin\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"string\",\"name\":\"productType\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"NewBeacon\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"string\",\"name\":\"productType\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"string\",\"name\":\"productName\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beaconProxy\",\"type\":\"address\"}],\"name\":\"NewBeaconProxy\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldGovernor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newGovernor\",\"type\":\"address\"}],\"name\":\"NewGovernor\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"string\",\"name\":\"productType\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"NewImplementation\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldPendingAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newPendingAdmin\",\"type\":\"address\"}],\"name\":\"NewPendingAdmin\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldPendingGovernor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newPendingGovernor\",\"type\":\"address\"}],\"name\":\"NewPendingGovernor\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"string\",\"name\":\"productType\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"string\",\"name\":\"productName\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beaconProxy\",\"type\":\"address\"}],\"name\":\"RemoveBeaconProxy\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"wrappedSft\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"wrappedSftSlot\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sftWrappedToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"navOracle\",\"type\":\"address\"}],\"name\":\"SftWrappedTokenCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"string\",\"name\":\"productType\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"TransferBeaconOwnership\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"string\",\"name\":\"productType\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"UpgradeBeacon\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"acceptAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"acceptGovernance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"productType_\",\"type\":\"string\"}],\"name\":\"deployBeacon\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"productType_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"productName_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"tokenName_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"tokenSymbol_\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"wrappedSft_\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"wrappedSftSlot_\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"navOracle_\",\"type\":\"address\"}],\"name\":\"deployProductProxy\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"proxy_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"productType_\",\"type\":\"string\"}],\"name\":\"getBeacon\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"productType_\",\"type\":\"string\"}],\"name\":\"getImplementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"productType_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"productName_\",\"type\":\"string\"}],\"name\":\"getProxy\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"governor\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pendingAdmin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pendingGovernor\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"productTypes\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"productType_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"productName_\",\"type\":\"string\"}],\"name\":\"removeProductProxy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"productType_\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"implementation_\",\"type\":\"address\"}],\"name\":\"setImplementation\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"sftWrappedTokenInfos\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"wrappedSft\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"wrappedSftSlot\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"navOracle\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"sftWrappedTokens\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPendingAdmin_\",\"type\":\"address\"}],\"name\":\"transferAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"productType_\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"newOwner_\",\"type\":\"address\"}],\"name\":\"transferBeaconOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPendingGovernor_\",\"type\":\"address\"}],\"name\":\"transferGovernance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"productType_\",\"type\":\"string\"}],\"name\":\"upgradeBeacon\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SftWrappedTokenFactory.sol\":\"SftWrappedTokenFactory\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {Context} from \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * The initial owner is set to the address provided by the deployer. This can\\n * later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    /**\\n     * @dev The caller account is not authorized to perform an operation.\\n     */\\n    error OwnableUnauthorizedAccount(address account);\\n\\n    /**\\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\\n     */\\n    error OwnableInvalidOwner(address owner);\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\\n     */\\n    constructor(address initialOwner) {\\n        if (initialOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(initialOwner);\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        if (owner() != _msgSender()) {\\n            revert OwnableUnauthorizedAccount(_msgSender());\\n        }\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        if (newOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/ERC1967/ERC1967Utils.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IBeacon} from \\\"../beacon/IBeacon.sol\\\";\\nimport {Address} from \\\"../../utils/Address.sol\\\";\\nimport {StorageSlot} from \\\"../../utils/StorageSlot.sol\\\";\\n\\n/**\\n * @dev This abstract contract provides getters and event emitting update functions for\\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\\n */\\nlibrary ERC1967Utils {\\n    // We re-declare ERC-1967 events here because they can't be used directly from IERC1967.\\n    // This will be fixed in Solidity 0.8.21. At that point we should remove these events.\\n    /**\\n     * @dev Emitted when the implementation is upgraded.\\n     */\\n    event Upgraded(address indexed implementation);\\n\\n    /**\\n     * @dev Emitted when the admin account has changed.\\n     */\\n    event AdminChanged(address previousAdmin, address newAdmin);\\n\\n    /**\\n     * @dev Emitted when the beacon is changed.\\n     */\\n    event BeaconUpgraded(address indexed beacon);\\n\\n    /**\\n     * @dev Storage slot with the address of the current implementation.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1.\\n     */\\n    // solhint-disable-next-line private-vars-leading-underscore\\n    bytes32 internal constant IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n\\n    /**\\n     * @dev The `implementation` of the proxy is invalid.\\n     */\\n    error ERC1967InvalidImplementation(address implementation);\\n\\n    /**\\n     * @dev The `admin` of the proxy is invalid.\\n     */\\n    error ERC1967InvalidAdmin(address admin);\\n\\n    /**\\n     * @dev The `beacon` of the proxy is invalid.\\n     */\\n    error ERC1967InvalidBeacon(address beacon);\\n\\n    /**\\n     * @dev An upgrade function sees `msg.value > 0` that may be lost.\\n     */\\n    error ERC1967NonPayable();\\n\\n    /**\\n     * @dev Returns the current implementation address.\\n     */\\n    function getImplementation() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 implementation slot.\\n     */\\n    function _setImplementation(address newImplementation) private {\\n        if (newImplementation.code.length == 0) {\\n            revert ERC1967InvalidImplementation(newImplementation);\\n        }\\n        StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value = newImplementation;\\n    }\\n\\n    /**\\n     * @dev Performs implementation upgrade with additional setup call if data is nonempty.\\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\\n     * to avoid stuck value in the contract.\\n     *\\n     * Emits an {IERC1967-Upgraded} event.\\n     */\\n    function upgradeToAndCall(address newImplementation, bytes memory data) internal {\\n        _setImplementation(newImplementation);\\n        emit Upgraded(newImplementation);\\n\\n        if (data.length > 0) {\\n            Address.functionDelegateCall(newImplementation, data);\\n        } else {\\n            _checkNonPayable();\\n        }\\n    }\\n\\n    /**\\n     * @dev Storage slot with the admin of the contract.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1.\\n     */\\n    // solhint-disable-next-line private-vars-leading-underscore\\n    bytes32 internal constant ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\\n\\n    /**\\n     * @dev Returns the current admin.\\n     *\\n     * TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using\\n     * the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\\n     * `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`\\n     */\\n    function getAdmin() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(ADMIN_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 admin slot.\\n     */\\n    function _setAdmin(address newAdmin) private {\\n        if (newAdmin == address(0)) {\\n            revert ERC1967InvalidAdmin(address(0));\\n        }\\n        StorageSlot.getAddressSlot(ADMIN_SLOT).value = newAdmin;\\n    }\\n\\n    /**\\n     * @dev Changes the admin of the proxy.\\n     *\\n     * Emits an {IERC1967-AdminChanged} event.\\n     */\\n    function changeAdmin(address newAdmin) internal {\\n        emit AdminChanged(getAdmin(), newAdmin);\\n        _setAdmin(newAdmin);\\n    }\\n\\n    /**\\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.beacon\\\" subtracted by 1.\\n     */\\n    // solhint-disable-next-line private-vars-leading-underscore\\n    bytes32 internal constant BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\\n\\n    /**\\n     * @dev Returns the current beacon.\\n     */\\n    function getBeacon() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(BEACON_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new beacon in the EIP1967 beacon slot.\\n     */\\n    function _setBeacon(address newBeacon) private {\\n        if (newBeacon.code.length == 0) {\\n            revert ERC1967InvalidBeacon(newBeacon);\\n        }\\n\\n        StorageSlot.getAddressSlot(BEACON_SLOT).value = newBeacon;\\n\\n        address beaconImplementation = IBeacon(newBeacon).implementation();\\n        if (beaconImplementation.code.length == 0) {\\n            revert ERC1967InvalidImplementation(beaconImplementation);\\n        }\\n    }\\n\\n    /**\\n     * @dev Change the beacon and trigger a setup call if data is nonempty.\\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\\n     * to avoid stuck value in the contract.\\n     *\\n     * Emits an {IERC1967-BeaconUpgraded} event.\\n     *\\n     * CAUTION: Invoking this function has no effect on an instance of {BeaconProxy} since v5, since\\n     * it uses an immutable beacon without looking at the value of the ERC-1967 beacon slot for\\n     * efficiency.\\n     */\\n    function upgradeBeaconToAndCall(address newBeacon, bytes memory data) internal {\\n        _setBeacon(newBeacon);\\n        emit BeaconUpgraded(newBeacon);\\n\\n        if (data.length > 0) {\\n            Address.functionDelegateCall(IBeacon(newBeacon).implementation(), data);\\n        } else {\\n            _checkNonPayable();\\n        }\\n    }\\n\\n    /**\\n     * @dev Reverts if `msg.value` is not zero. It can be used to avoid `msg.value` stuck in the contract\\n     * if an upgrade doesn't perform an initialization call.\\n     */\\n    function _checkNonPayable() private {\\n        if (msg.value > 0) {\\n            revert ERC1967NonPayable();\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x06a78f9b3ee3e6d0eb4e4cd635ba49960bea34cac1db8c0a27c75f2319f1fd65\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/Proxy.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/Proxy.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev This abstract contract provides a fallback function that delegates all calls to another contract using the EVM\\n * instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to\\n * be specified by overriding the virtual {_implementation} function.\\n *\\n * Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a\\n * different contract through the {_delegate} function.\\n *\\n * The success and return data of the delegated call will be returned back to the caller of the proxy.\\n */\\nabstract contract Proxy {\\n    /**\\n     * @dev Delegates the current call to `implementation`.\\n     *\\n     * This function does not return to its internal call site, it will return directly to the external caller.\\n     */\\n    function _delegate(address implementation) internal virtual {\\n        assembly {\\n            // Copy msg.data. We take full control of memory in this inline assembly\\n            // block because it will not return to Solidity code. We overwrite the\\n            // Solidity scratch pad at memory position 0.\\n            calldatacopy(0, 0, calldatasize())\\n\\n            // Call the implementation.\\n            // out and outsize are 0 because we don't know the size yet.\\n            let result := delegatecall(gas(), implementation, 0, calldatasize(), 0, 0)\\n\\n            // Copy the returned data.\\n            returndatacopy(0, 0, returndatasize())\\n\\n            switch result\\n            // delegatecall returns 0 on error.\\n            case 0 {\\n                revert(0, returndatasize())\\n            }\\n            default {\\n                return(0, returndatasize())\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev This is a virtual function that should be overridden so it returns the address to which the fallback\\n     * function and {_fallback} should delegate.\\n     */\\n    function _implementation() internal view virtual returns (address);\\n\\n    /**\\n     * @dev Delegates the current call to the address returned by `_implementation()`.\\n     *\\n     * This function does not return to its internal call site, it will return directly to the external caller.\\n     */\\n    function _fallback() internal virtual {\\n        _delegate(_implementation());\\n    }\\n\\n    /**\\n     * @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if no other\\n     * function in the contract matches the call data.\\n     */\\n    fallback() external payable virtual {\\n        _fallback();\\n    }\\n}\\n\",\"keccak256\":\"0xc3f2ec76a3de8ed7a7007c46166f5550c72c7709e3fc7e8bb3111a7191cdedbd\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/beacon/BeaconProxy.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IBeacon} from \\\"./IBeacon.sol\\\";\\nimport {Proxy} from \\\"../Proxy.sol\\\";\\nimport {ERC1967Utils} from \\\"../ERC1967/ERC1967Utils.sol\\\";\\n\\n/**\\n * @dev This contract implements a proxy that gets the implementation address for each call from an {UpgradeableBeacon}.\\n *\\n * The beacon address can only be set once during construction, and cannot be changed afterwards. It is stored in an\\n * immutable variable to avoid unnecessary storage reads, and also in the beacon storage slot specified by\\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967] so that it can be accessed externally.\\n *\\n * CAUTION: Since the beacon address can never be changed, you must ensure that you either control the beacon, or trust\\n * the beacon to not upgrade the implementation maliciously.\\n *\\n * IMPORTANT: Do not use the implementation logic to modify the beacon storage slot. Doing so would leave the proxy in\\n * an inconsistent state where the beacon storage slot does not match the beacon address.\\n */\\ncontract BeaconProxy is Proxy {\\n    // An immutable address for the beacon to avoid unnecessary SLOADs before each delegate call.\\n    address private immutable _beacon;\\n\\n    /**\\n     * @dev Initializes the proxy with `beacon`.\\n     *\\n     * If `data` is nonempty, it's used as data in a delegate call to the implementation returned by the beacon. This\\n     * will typically be an encoded function call, and allows initializing the storage of the proxy like a Solidity\\n     * constructor.\\n     *\\n     * Requirements:\\n     *\\n     * - `beacon` must be a contract with the interface {IBeacon}.\\n     * - If `data` is empty, `msg.value` must be zero.\\n     */\\n    constructor(address beacon, bytes memory data) payable {\\n        ERC1967Utils.upgradeBeaconToAndCall(beacon, data);\\n        _beacon = beacon;\\n    }\\n\\n    /**\\n     * @dev Returns the current implementation address of the associated beacon.\\n     */\\n    function _implementation() internal view virtual override returns (address) {\\n        return IBeacon(_getBeacon()).implementation();\\n    }\\n\\n    /**\\n     * @dev Returns the beacon.\\n     */\\n    function _getBeacon() internal view virtual returns (address) {\\n        return _beacon;\\n    }\\n}\\n\",\"keccak256\":\"0x387ebdcb365b8e620f26645d2b34a161cd39eedfb0219e8baff55630c5ae113c\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/beacon/IBeacon.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\\n */\\ninterface IBeacon {\\n    /**\\n     * @dev Must return an address that can be used as a delegate call target.\\n     *\\n     * {UpgradeableBeacon} will check that this address is a contract.\\n     */\\n    function implementation() external view returns (address);\\n}\\n\",\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/beacon/UpgradeableBeacon.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IBeacon} from \\\"./IBeacon.sol\\\";\\nimport {Ownable} from \\\"../../access/Ownable.sol\\\";\\n\\n/**\\n * @dev This contract is used in conjunction with one or more instances of {BeaconProxy} to determine their\\n * implementation contract, which is where they will delegate all function calls.\\n *\\n * An owner is able to change the implementation the beacon points to, thus upgrading the proxies that use this beacon.\\n */\\ncontract UpgradeableBeacon is IBeacon, Ownable {\\n    address private _implementation;\\n\\n    /**\\n     * @dev The `implementation` of the beacon is invalid.\\n     */\\n    error BeaconInvalidImplementation(address implementation);\\n\\n    /**\\n     * @dev Emitted when the implementation returned by the beacon is changed.\\n     */\\n    event Upgraded(address indexed implementation);\\n\\n    /**\\n     * @dev Sets the address of the initial implementation, and the initial owner who can upgrade the beacon.\\n     */\\n    constructor(address implementation_, address initialOwner) Ownable(initialOwner) {\\n        _setImplementation(implementation_);\\n    }\\n\\n    /**\\n     * @dev Returns the current implementation address.\\n     */\\n    function implementation() public view virtual returns (address) {\\n        return _implementation;\\n    }\\n\\n    /**\\n     * @dev Upgrades the beacon to a new implementation.\\n     *\\n     * Emits an {Upgraded} event.\\n     *\\n     * Requirements:\\n     *\\n     * - msg.sender must be the owner of the contract.\\n     * - `newImplementation` must be a contract.\\n     */\\n    function upgradeTo(address newImplementation) public virtual onlyOwner {\\n        _setImplementation(newImplementation);\\n    }\\n\\n    /**\\n     * @dev Sets the implementation contract address for this beacon\\n     *\\n     * Requirements:\\n     *\\n     * - `newImplementation` must be a contract.\\n     */\\n    function _setImplementation(address newImplementation) private {\\n        if (newImplementation.code.length == 0) {\\n            revert BeaconInvalidImplementation(newImplementation);\\n        }\\n        _implementation = newImplementation;\\n        emit Upgraded(newImplementation);\\n    }\\n}\\n\",\"keccak256\":\"0x5920bac7215d12961e23b207f6e81a1d64aa4935a4469abe95b64a96a3c3007b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev The ETH balance of the account is not enough to perform the operation.\\n     */\\n    error AddressInsufficientBalance(address account);\\n\\n    /**\\n     * @dev There's no code at `target` (it is not a contract).\\n     */\\n    error AddressEmptyCode(address target);\\n\\n    /**\\n     * @dev A call to an address target failed. The target may have reverted.\\n     */\\n    error FailedInnerCall();\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        if (address(this).balance < amount) {\\n            revert AddressInsufficientBalance(address(this));\\n        }\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        if (!success) {\\n            revert FailedInnerCall();\\n        }\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason or custom error, it is bubbled\\n     * up by this function (like regular Solidity function calls). However, if\\n     * the call reverted with no returned reason, this function reverts with a\\n     * {FailedInnerCall} error.\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        if (address(this).balance < value) {\\n            revert AddressInsufficientBalance(address(this));\\n        }\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\\n     * was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\\n     * unsuccessful call.\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata\\n    ) internal view returns (bytes memory) {\\n        if (!success) {\\n            _revert(returndata);\\n        } else {\\n            // only check if target is a contract if the call was successful and the return data is empty\\n            // otherwise we already know that it was a contract\\n            if (returndata.length == 0 && target.code.length == 0) {\\n                revert AddressEmptyCode(target);\\n            }\\n            return returndata;\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\\n     * revert reason or with a default {FailedInnerCall} error.\\n     */\\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\\n        if (!success) {\\n            _revert(returndata);\\n        } else {\\n            return returndata;\\n        }\\n    }\\n\\n    /**\\n     * @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}.\\n     */\\n    function _revert(bytes memory returndata) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert FailedInnerCall();\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/StorageSlot.sol)\\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Library for reading and writing primitive types to specific storage slots.\\n *\\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\\n * This library helps with reading and writing to such slots without the need for inline assembly.\\n *\\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\\n *\\n * Example usage to set ERC1967 implementation slot:\\n * ```solidity\\n * contract ERC1967 {\\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n *\\n *     function _getImplementation() internal view returns (address) {\\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n *     }\\n *\\n *     function _setImplementation(address newImplementation) internal {\\n *         require(newImplementation.code.length > 0);\\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n *     }\\n * }\\n * ```\\n */\\nlibrary StorageSlot {\\n    struct AddressSlot {\\n        address value;\\n    }\\n\\n    struct BooleanSlot {\\n        bool value;\\n    }\\n\\n    struct Bytes32Slot {\\n        bytes32 value;\\n    }\\n\\n    struct Uint256Slot {\\n        uint256 value;\\n    }\\n\\n    struct StringSlot {\\n        string value;\\n    }\\n\\n    struct BytesSlot {\\n        bytes value;\\n    }\\n\\n    /**\\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\\n     */\\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\\n     */\\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\\n     */\\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\\n     */\\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\\n     */\\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\\n     */\\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\\n     */\\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\\n     */\\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\"},\"contracts/SftWrappedTokenFactory.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol\\\";\\nimport \\\"@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol\\\";\\nimport \\\"./access/AdminControl.sol\\\";\\nimport \\\"./access/GovernorControl.sol\\\";\\n\\ncontract SftWrappedTokenFactory is AdminControl, GovernorControl {\\n\\n    event NewImplementation(string indexed productType, address indexed implementation);\\n    event NewBeacon(string indexed productType, address indexed beacon, address indexed implementation);\\n    event UpgradeBeacon(string indexed productType, address indexed beacon, address indexed implementation);\\n    event TransferBeaconOwnership(string indexed productType, address indexed beacon, address indexed newOwner);\\n    event NewBeaconProxy(string indexed productType, string indexed productName, address indexed beaconProxy);\\n    event RemoveBeaconProxy(string indexed productType, string indexed productName, address indexed beaconProxy);\\n    event SftWrappedTokenCreated(\\n        address indexed wrappedSft, uint256 indexed wrappedSftSlot, address indexed sftWrappedToken, \\n        string name, string symbol, address navOracle\\n    );\\n    \\n    struct ProductType {\\n        address implementation;\\n        address beacon;\\n        mapping(string => address) proxies;\\n    }\\n\\n    struct SftWrappedTokenInfo {\\n        string name;\\n        string symbol;\\n        address wrappedSft;\\n        uint256 wrappedSftSlot;\\n        address navOracle;\\n    }\\n\\n    mapping(string => ProductType) public productTypes;\\n\\n    // sftWrappedToken address\\n    mapping(address => SftWrappedTokenInfo) public sftWrappedTokenInfos;\\n\\n    // sft address => sft slot => sftWrappedToken address\\n    mapping(address => mapping(uint256 => address)) public sftWrappedTokens;\\n\\n    constructor(address governor_) AdminControl(msg.sender) GovernorControl(governor_) {}\\n    \\n    function setImplementation(string memory productType_, address implementation_) external virtual onlyAdmin {\\n        productTypes[productType_].implementation = implementation_;\\n        emit NewImplementation(productType_, implementation_);\\n    }\\n\\n    function deployBeacon(string memory productType_) external virtual onlyAdmin returns (address beacon) {\\n        address implementation = productTypes[productType_].implementation;\\n        require(implementation != address(0), \\\"SftWrappedTokenFactory: implementation not deployed\\\");\\n        require(productTypes[productType_].beacon == address(0), \\\"SftWrappedTokenFactory: beacon already deployed\\\");\\n\\n        beacon = address(new UpgradeableBeacon(implementation, address(this)));\\n        productTypes[productType_].beacon = beacon;\\n        emit NewBeacon(productType_, beacon, implementation);\\n    }\\n\\n    function upgradeBeacon(string memory productType_) external virtual onlyAdmin {\\n        address latestImplementation = productTypes[productType_].implementation;\\n        address beacon = productTypes[productType_].beacon;\\n        \\n        require(latestImplementation != address(0), \\\"SftWrappedTokenFactory: implementation not deployed\\\");\\n        require(UpgradeableBeacon(beacon).implementation() != latestImplementation, \\\"SftWrappedTokenFactory: same implementation\\\");\\n        UpgradeableBeacon(beacon).upgradeTo(latestImplementation);\\n        emit UpgradeBeacon(productType_, beacon, latestImplementation);\\n    }\\n\\n    function transferBeaconOwnership(string memory productType_, address newOwner_) external virtual onlyAdmin {\\n        address beacon = productTypes[productType_].beacon;\\n        UpgradeableBeacon(beacon).transferOwnership(newOwner_);\\n        emit TransferBeaconOwnership(productType_, beacon, newOwner_);\\n    }\\n\\n    function deployProductProxy(\\n        string memory productType_, string memory productName_,\\n        string memory tokenName_, string memory tokenSymbol_, \\n        address wrappedSft_, uint256 wrappedSftSlot_, \\n        address navOracle_\\n    ) external virtual onlyGovernor returns (address proxy_) {\\n        require(wrappedSft_ != address(0), \\\"SftWrappedTokenFactory: invalid wrapped sft address\\\");\\n        require(navOracle_ != address(0), \\\"SftWrappedTokenFactory: invalid nav oracle address\\\");\\n        require(sftWrappedTokens[wrappedSft_][wrappedSftSlot_] == address(0), \\\"SftWrappedTokenFactory: SftWrappedToken already deployed\\\");\\n\\n        ProductType storage productType = productTypes[productType_];\\n        require(productType.proxies[productName_] == address(0), \\\"SftWrappedTokenFactory: product already deployed\\\");\\n        require(productType.beacon != address(0), \\\"SftWrappedTokenFactory: beacon not deployed\\\");\\n\\n        proxy_ = address(new BeaconProxy(productType.beacon, new bytes(0)));\\n        bytes memory initData = abi.encodeWithSignature(\\n            \\\"initialize(string,string,address,uint256,address)\\\",\\n            tokenName_, tokenSymbol_, wrappedSft_, wrappedSftSlot_, navOracle_\\n        );\\n        (bool success, ) = proxy_.call(initData);\\n        require(success, \\\"SftWrappedTokenFactory: initialization failed\\\");\\n\\n        productType.proxies[productName_] = proxy_;\\n        emit NewBeaconProxy(productType_, productName_, proxy_);\\n\\n        sftWrappedTokenInfos[proxy_] = SftWrappedTokenInfo({\\n            name: tokenName_, symbol: tokenSymbol_, wrappedSft: wrappedSft_,\\n            wrappedSftSlot: wrappedSftSlot_, navOracle: navOracle_\\n        });\\n        sftWrappedTokens[wrappedSft_][wrappedSftSlot_] = proxy_;\\n\\n        emit SftWrappedTokenCreated(wrappedSft_, wrappedSftSlot_, proxy_, tokenName_, tokenSymbol_, navOracle_);\\n    }\\n\\n    function removeProductProxy(string memory productType_, string memory productName_) external onlyGovernor {\\n        address proxy = productTypes[productType_].proxies[productName_];\\n        require(proxy != address(0), \\\"SftWrappedTokenFactory: proxy not deployed\\\");\\n        delete productTypes[productType_].proxies[productName_];\\n        emit RemoveBeaconProxy(productType_, productName_, proxy);\\n    }\\n\\n    function getImplementation(string memory productType_) external view virtual returns (address) {\\n        return productTypes[productType_].implementation;\\n    }\\n\\n    function getBeacon(string memory productType_) external view virtual returns (address) {\\n        return productTypes[productType_].beacon;\\n    }\\n\\n    function getProxy(string memory productType_, string memory productName_) public view returns (address) {\\n        return productTypes[productType_].proxies[productName_];\\n    }\\n\\n}\\n\",\"keccak256\":\"0x1fe0805d497b882d65ec862f2d95063fa8538906ce1d3e20f49d28e0f2c9d97f\",\"license\":\"MIT\"},\"contracts/access/AdminControl.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nabstract contract AdminControl {\\n\\n    event NewAdmin(address oldAdmin, address newAdmin);\\n    event NewPendingAdmin(address oldPendingAdmin, address newPendingAdmin);\\n\\n    address public admin;\\n    address public pendingAdmin;\\n\\n    modifier onlyAdmin() {\\n        require(msg.sender == admin, \\\"only admin\\\");\\n        _;\\n    }\\n\\n    modifier onlyPendingAdmin() {\\n        require(msg.sender == pendingAdmin, \\\"only pending admin\\\");\\n        _;\\n    }\\n\\n    constructor(address admin_) {\\n        admin = admin_;\\n        emit NewAdmin(address(0), admin_);\\n    }\\n\\n    function transferAdmin(address newPendingAdmin_) external virtual onlyAdmin {\\n        emit NewPendingAdmin(pendingAdmin, newPendingAdmin_);\\n        pendingAdmin = newPendingAdmin_;        \\n    }\\n\\n    function acceptAdmin() external virtual onlyPendingAdmin {\\n        emit NewAdmin(admin, pendingAdmin);\\n        admin = pendingAdmin;\\n        delete pendingAdmin;\\n    }\\n}\\n\",\"keccak256\":\"0x53cdc9cfca3877cef0462d5dd2dd139cce1292792e6f6eaa35ee5182a4689233\",\"license\":\"MIT\"},\"contracts/access/GovernorControl.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nabstract contract GovernorControl {\\n\\n\\tevent NewGovernor(address oldGovernor, address newGovernor);\\n\\tevent NewPendingGovernor(address oldPendingGovernor, address newPendingGovernor);\\n\\n\\taddress public governor;\\n\\taddress public pendingGovernor;\\n\\n\\tmodifier onlyGovernor() {\\n\\t\\trequire(governor == msg.sender, \\\"only governor\\\");\\n\\t\\t_;\\n\\t}\\n\\n\\tmodifier onlyPendingGovernor() {\\n\\t\\trequire(pendingGovernor == msg.sender, \\\"only governor\\\");\\n\\t\\t_;\\n\\t}\\n\\n\\tconstructor(address governor_) {\\n\\t\\tgovernor = governor_;\\n        emit NewGovernor(address(0), governor_);\\n\\t}\\n\\n\\tfunction transferGovernance(address newPendingGovernor_) external virtual onlyGovernor {\\n\\t\\temit NewPendingGovernor(pendingGovernor, newPendingGovernor_);\\n\\t\\tpendingGovernor = newPendingGovernor_;\\n\\t}\\n\\n\\tfunction acceptGovernance() external virtual onlyPendingGovernor {\\n\\t\\temit NewGovernor(governor, pendingGovernor);\\n\\t\\tgovernor = pendingGovernor;\\n\\t\\tdelete pendingGovernor;\\n\\t}\\n}\\n\",\"keccak256\":\"0xd4851acdd0e38b8d8fdc1108124f45ee8d59d77f1f29e44b61c4e847fb29cd86\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b50604051620027b6380380620027b68339810160408190526200003491620000e6565b600080546001600160a01b03191633908117825560405183927ff9ffabca9c8276e99321725bcb43fb076a6c66a54b7f21c4e8146d8519b417dc916200007d9190849062000118565b60405180910390a150600280546001600160a01b0319166001600160a01b0383161790556040517f1ba669d4a78521f2ad26e8e0fcbcdd626a63f34d68f326bc232a3abe2a5d042a90620000d690600090849062000118565b60405180910390a1505062000132565b600060208284031215620000f957600080fd5b81516001600160a01b03811681146200011157600080fd5b9392505050565b6001600160a01b0392831681529116602082015260400190565b61267480620001426000396000f3fe60806040523480156200001157600080fd5b5060043610620001125760003560e01c806302bc365c146200011757806306419fe514620001305780630c340a2414620001475780630ddcef5314620001735780630e18b681146200018a578063238efcbc146200019457806326782247146200019e57806337547a9714620001b257806361ffdf4014620001e95780636b683896146200021357806375829def146200022a578063a04c50791462000241578063a844babb1462000258578063a85ab65d14620002aa578063aaebc53714620002c1578063bc47eb1d14620002d8578063d38bfff414620002ef578063d820ff111462000306578063e3056a34146200031d578063f851a4401462000331575b600080fd5b6200012e6200012836600462001628565b62000345565b005b6200012e62000141366004620016bd565b620004e2565b6002546200015b906001600160a01b031681565b6040516200016a919062001714565b60405180910390f35b6200015b6200018436600462001728565b62000592565b6200012e620005c8565b6200012e6200068d565b6001546200015b906001600160a01b031681565b6200015b620001c336600462001768565b60066020908152600092835260408084209091529082529020546001600160a01b031681565b62000200620001fa36600462001797565b6200072e565b6040516200016a95949392919062001812565b6200015b6200022436600462001728565b62000889565b6200012e6200023b36600462001797565b620008bc565b6200012e62000252366004620016bd565b62000954565b6200029a6200026936600462001728565b8051602081830181018051600482529282019190930120915280546001909101546001600160a01b03918216911682565b6040516200016a92919062001866565b6200015b620002bb36600462001880565b62000a62565b6200015b620002d236600462001728565b62001049565b6200015b620002e936600462001628565b6200122e565b6200012e6200030036600462001797565b62001284565b6200012e6200031736600462001728565b6200131c565b6003546200015b906001600160a01b031681565b6000546200015b906001600160a01b031681565b6002546001600160a01b031633146200037b5760405162461bcd60e51b8152600401620003729062001968565b60405180910390fd5b60006004836040516200038f91906200198f565b908152602001604051809103902060020182604051620003b091906200198f565b908152604051908190036020019020546001600160a01b03169050806200042d5760405162461bcd60e51b815260206004820152602a60248201527f53667457726170706564546f6b656e466163746f72793a2070726f7879206e6f6044820152691d0819195c1b1bde595960b21b606482015260840162000372565b6004836040516200043f91906200198f565b9081526020016040518091039020600201826040516200046091906200198f565b90815260405190819003602001812080546001600160a01b03191690556001600160a01b03821690620004959084906200198f565b604051809103902084604051620004ad91906200198f565b604051908190038120907f72871655cb8e08a51370cd107b066dc7fa642b39f87eba10447580209c3207cc90600090a4505050565b6000546001600160a01b031633146200050f5760405162461bcd60e51b81526004016200037290620019ad565b806004836040516200052291906200198f565b90815260405190819003602001812080546001600160a01b039384166001600160a01b0319909116179055908216906200055e9084906200198f565b604051908190038120907f70cc12b129d10f00c73743b4313ad6997088babca4be2b6732a960391203c31f90600090a35050565b6000600482604051620005a691906200198f565b908152604051908190036020019020600101546001600160a01b031692915050565b6001546001600160a01b03163314620006195760405162461bcd60e51b815260206004820152601260248201527137b7363c903832b73234b7339030b236b4b760711b604482015260640162000372565b6000546001546040517ff9ffabca9c8276e99321725bcb43fb076a6c66a54b7f21c4e8146d8519b417dc926200065e926001600160a01b039182169291169062001866565b60405180910390a160018054600080546001600160a01b03199081166001600160a01b03841617909155169055565b6003546001600160a01b03163314620006ba5760405162461bcd60e51b8152600401620003729062001968565b6002546003546040517f1ba669d4a78521f2ad26e8e0fcbcdd626a63f34d68f326bc232a3abe2a5d042a92620006ff926001600160a01b039182169291169062001866565b60405180910390a160038054600280546001600160a01b03199081166001600160a01b03841617909155169055565b6005602052600090815260409020805481906200074b90620019d1565b80601f01602080910402602001604051908101604052809291908181526020018280546200077990620019d1565b8015620007ca5780601f106200079e57610100808354040283529160200191620007ca565b820191906000526020600020905b815481529060010190602001808311620007ac57829003601f168201915b505050505090806001018054620007e190620019d1565b80601f01602080910402602001604051908101604052809291908181526020018280546200080f90620019d1565b8015620008605780601f10620008345761010080835404028352916020019162000860565b820191906000526020600020905b8154815290600101906020018083116200084257829003601f168201915b505050506002830154600384015460049094015492936001600160a01b03918216939092501685565b60006004826040516200089d91906200198f565b908152604051908190036020019020546001600160a01b031692915050565b6000546001600160a01b03163314620008e95760405162461bcd60e51b81526004016200037290620019ad565b6001546040517fca4f2f25d0898edd99413412fb94012f9e54ec8142f9b093e7720646a95b16a9916200092a916001600160a01b0390911690849062001866565b60405180910390a1600180546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b03163314620009815760405162461bcd60e51b81526004016200037290620019ad565b60006004836040516200099591906200198f565b9081526040519081900360200181206001015463f2fde38b60e01b82526001600160a01b03169150819063f2fde38b90620009d590859060040162001714565b600060405180830381600087803b158015620009f057600080fd5b505af115801562000a05573d6000803e3d6000fd5b50505050816001600160a01b0316816001600160a01b03168460405162000a2d91906200198f565b604051908190038120907fc69903c0cec4f4503aa4496d78dcbf9f6e045679a04c0e921b7bad8e72b209d090600090a4505050565b6002546000906001600160a01b0316331462000a925760405162461bcd60e51b8152600401620003729062001968565b6001600160a01b03841662000af55760405162461bcd60e51b815260206004820152603360248201526000805160206200261f8339815191526044820152727772617070656420736674206164647265737360681b606482015260840162000372565b6001600160a01b03821662000b575760405162461bcd60e51b815260206004820152603260248201526000805160206200261f8339815191526044820152716e6176206f7261636c65206164647265737360701b606482015260840162000372565b6001600160a01b038481166000908152600660209081526040808320878452909152902054161562000bed5760405162461bcd60e51b815260206004820152603860248201527f53667457726170706564546f6b656e466163746f72793a2053667457726170706044820152771959151bdad95b88185b1c9958591e4819195c1b1bde595960421b606482015260840162000372565b600060048960405162000c0191906200198f565b9081526040519081900360200181209150600090600283019062000c27908b906200198f565b908152604051908190036020019020546001600160a01b03161462000ca85760405162461bcd60e51b815260206004820152603060248201527f53667457726170706564546f6b656e466163746f72793a2070726f647563742060448201526f185b1c9958591e4819195c1b1bde595960821b606482015260840162000372565b60018101546001600160a01b031662000d185760405162461bcd60e51b815260206004820152602b60248201527f53667457726170706564546f6b656e466163746f72793a20626561636f6e206e60448201526a1bdd0819195c1b1bde595960aa1b606482015260840162000372565b6001810154604080516000815260208101918290526001600160a01b03909216919062000d459062001562565b62000d5292919062001a0d565b604051809103906000f08015801562000d6f573d6000803e3d6000fd5b5091506000878787878760405160240162000d8f95949392919062001812565b60408051601f198184030181529181526020820180516001600160e01b03166350eeb51760e11b179052519091506000906001600160a01b0385169062000dd89084906200198f565b6000604051808303816000865af19150503d806000811462000e17576040519150601f19603f3d011682016040523d82523d6000602084013e62000e1c565b606091505b505090508062000e855760405162461bcd60e51b815260206004820152602d60248201527f53667457726170706564546f6b656e466163746f72793a20696e697469616c6960448201526c1e985d1a5bdb8819985a5b1959609a1b606482015260840162000372565b83836002018b60405162000e9a91906200198f565b90815260405190819003602001812080546001600160a01b039384166001600160a01b03199091161790559085169062000ed6908c906200198f565b60405180910390208c60405162000eee91906200198f565b604051908190038120907fc30ce88f5e35e9e52ef522887407c7e48fc30575f887289cd41d63bbc665e7ec90600090a46040805160a0810182528a815260208082018b90526001600160a01b03808b1683850152606083018a90528881166080840152871660009081526005909152919091208151819062000f71908262001a86565b506020820151600182019062000f88908262001a86565b506040828101516002830180546001600160a01b03199081166001600160a01b039384161790915560608501516003850155608090940151600490930180548516938216939093179092558982166000818152600660209081528382208c83529052829020805490941692881692831790935551909188917fc8a272a7f3a153b04ab11279ddaf18e6b898f114aa17a8b329630d37e9a6c5729062001033908e908e908c9062001b52565b60405180910390a4505050979650505050505050565b600080546001600160a01b03163314620010775760405162461bcd60e51b81526004016200037290620019ad565b60006004836040516200108b91906200198f565b908152604051908190036020019020546001600160a01b0316905080620010c65760405162461bcd60e51b8152600401620003729062001b94565b60006001600160a01b0316600484604051620010e391906200198f565b908152604051908190036020019020600101546001600160a01b031614620011665760405162461bcd60e51b815260206004820152602f60248201527f53667457726170706564546f6b656e466163746f72793a20626561636f6e206160448201526e1b1c9958591e4819195c1b1bde5959608a1b606482015260840162000372565b8030604051620011769062001570565b6200118392919062001866565b604051809103906000f080158015620011a0573d6000803e3d6000fd5b50915081600484604051620011b691906200198f565b90815260405190819003602001812060010180546001600160a01b039384166001600160a01b031990911617905582821691841690620011f89086906200198f565b604051908190038120907fcd7ef590b717071b3f540fe9b93410b1e56b126b254fe215336ea709fba59b2190600090a450919050565b60006004836040516200124291906200198f565b9081526020016040518091039020600201826040516200126391906200198f565b908152604051908190036020019020546001600160a01b0316905092915050565b6002546001600160a01b03163314620012b15760405162461bcd60e51b8152600401620003729062001968565b6003546040517f7d767be5a57784412a13945bd5114db84487d2b007bfcdb2f449fc9ea35437f791620012f2916001600160a01b0390911690849062001866565b60405180910390a1600380546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b03163314620013495760405162461bcd60e51b81526004016200037290620019ad565b60006004826040516200135d91906200198f565b908152604051908190036020018120546001600160a01b031691506000906004906200138b9085906200198f565b908152604051908190036020019020600101546001600160a01b0390811691508216620013cc5760405162461bcd60e51b8152600401620003729062001b94565b816001600160a01b0316816001600160a01b0316635c60da1b6040518163ffffffff1660e01b8152600401602060405180830381865afa15801562001415573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200143b919062001be7565b6001600160a01b031603620014a75760405162461bcd60e51b815260206004820152602b60248201527f53667457726170706564546f6b656e466163746f72793a2073616d6520696d7060448201526a3632b6b2b73a30ba34b7b760a91b606482015260840162000372565b604051631b2ce7f360e11b81526001600160a01b03821690633659cfe690620014d590859060040162001714565b600060405180830381600087803b158015620014f057600080fd5b505af115801562001505573d6000803e3d6000fd5b50505050816001600160a01b0316816001600160a01b0316846040516200152d91906200198f565b604051908190038120907fc73db28a0b1cf26933458afb626169fba2899e9fb8b2dd91ceac16f1f815d85290600090a4505050565b6105bc8062001c0883390190565b61045b80620021c483390190565b634e487b7160e01b600052604160045260246000fd5b600082601f830112620015a657600080fd5b81356001600160401b0380821115620015c357620015c36200157e565b604051601f8301601f19908116603f01168101908282118183101715620015ee57620015ee6200157e565b816040528381528660208588010111156200160857600080fd5b836020870160208301376000602085830101528094505050505092915050565b600080604083850312156200163c57600080fd5b82356001600160401b03808211156200165457600080fd5b620016628683870162001594565b935060208501359150808211156200167957600080fd5b50620016888582860162001594565b9150509250929050565b6001600160a01b0381168114620016a857600080fd5b50565b8035620016b88162001692565b919050565b60008060408385031215620016d157600080fd5b82356001600160401b03811115620016e857600080fd5b620016f68582860162001594565b9250506020830135620017098162001692565b809150509250929050565b6001600160a01b0391909116815260200190565b6000602082840312156200173b57600080fd5b81356001600160401b038111156200175257600080fd5b620017608482850162001594565b949350505050565b600080604083850312156200177c57600080fd5b8235620017898162001692565b946020939093013593505050565b600060208284031215620017aa57600080fd5b8135620017b78162001692565b9392505050565b60005b83811015620017db578181015183820152602001620017c1565b50506000910152565b60008151808452620017fe816020860160208601620017be565b601f01601f19169290920160200192915050565b60a0815260006200182760a0830188620017e4565b82810360208401526200183b8188620017e4565b6001600160a01b03968716604085015260608401959095525050921660809092019190915292915050565b6001600160a01b0392831681529116602082015260400190565b600080600080600080600060e0888a0312156200189c57600080fd5b87356001600160401b0380821115620018b457600080fd5b620018c28b838c0162001594565b985060208a0135915080821115620018d957600080fd5b620018e78b838c0162001594565b975060408a0135915080821115620018fe57600080fd5b6200190c8b838c0162001594565b965060608a01359150808211156200192357600080fd5b50620019328a828b0162001594565b9450506200194360808901620016ab565b925060a088013591506200195a60c08901620016ab565b905092959891949750929550565b6020808252600d908201526c37b7363c9033b7bb32b93737b960991b604082015260600190565b60008251620019a3818460208701620017be565b9190910192915050565b6020808252600a908201526937b7363c9030b236b4b760b11b604082015260600190565b600181811c90821680620019e657607f821691505b60208210810362001a0757634e487b7160e01b600052602260045260246000fd5b50919050565b6001600160a01b03831681526040602082018190526000906200176090830184620017e4565b601f82111562001a8157600081815260208120601f850160051c8101602086101562001a5c5750805b601f850160051c820191505b8181101562001a7d5782815560010162001a68565b5050505b505050565b81516001600160401b0381111562001aa25762001aa26200157e565b62001aba8162001ab38454620019d1565b8462001a33565b602080601f83116001811462001af2576000841562001ad95750858301515b600019600386901b1c1916600185901b17855562001a7d565b600085815260208120601f198616915b8281101562001b235788860151825594840194600190910190840162001b02565b508582101562001b425787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60608152600062001b676060830186620017e4565b828103602084015262001b7b8186620017e4565b91505060018060a01b0383166040830152949350505050565b60208082526033908201527f53667457726170706564546f6b656e466163746f72793a20696d706c656d656e6040820152721d185d1a5bdb881b9bdd0819195c1b1bde5959606a1b606082015260800190565b60006020828403121562001bfa57600080fd5b8151620017b7816200169256fe60a06040526040516105bc3803806105bc83398101604081905261002291610370565b61002c828261003e565b506001600160a01b031660805261047b565b610047826100fe565b6040516001600160a01b038316907f1cf3b03a6cf19fa2baba4df148e9dcabedea7f8a5c07840e207e5c089be95d3e90600090a28051156100f2576100ed826001600160a01b0316635c60da1b6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156100c3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100e79190610430565b82610203565b505050565b6100fa61027a565b5050565b806001600160a01b03163b6000036101345780604051631933b43b60e21b815260040161012b919061044b565b60405180910390fd5b807fa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d5080546001600160a01b0319166001600160a01b0392831617905560408051635c60da1b60e01b81529051600092841691635c60da1b9160048083019260209291908290030181865afa1580156101b0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101d49190610430565b9050806001600160a01b03163b6000036100fa5780604051634c9c8ce360e01b815260040161012b919061044b565b6060600080846001600160a01b031684604051610220919061045f565b600060405180830381855af49150503d806000811461025b576040519150601f19603f3d011682016040523d82523d6000602084013e610260565b606091505b50909250905061027185838361029b565b95945050505050565b34156102995760405163b398979f60e01b815260040160405180910390fd5b565b6060826102b0576102ab826102f1565b6102ea565b81511580156102c757506001600160a01b0384163b155b156102e75783604051639996b31560e01b815260040161012b919061044b565b50805b9392505050565b8051156103015780518082602001fd5b604051630a12f52160e11b815260040160405180910390fd5b80516001600160a01b038116811461033157600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b60005b8381101561036757818101518382015260200161034f565b50506000910152565b6000806040838503121561038357600080fd5b61038c8361031a565b60208401519092506001600160401b03808211156103a957600080fd5b818501915085601f8301126103bd57600080fd5b8151818111156103cf576103cf610336565b604051601f8201601f19908116603f011681019083821181831017156103f7576103f7610336565b8160405282815288602084870101111561041057600080fd5b61042183602083016020880161034c565b80955050505050509250929050565b60006020828403121561044257600080fd5b6102ea8261031a565b6001600160a01b0391909116815260200190565b6000825161047181846020870161034c565b9190910192915050565b6080516101276104956000396000601e01526101276000f3fe6080604052600a600c565b005b60186014601a565b60a0565b565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316635c60da1b6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156079573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190609b919060c3565b905090565b3660008037600080366000845af43d6000803e80801560be573d6000f35b3d6000fd5b60006020828403121560d457600080fd5b81516001600160a01b038116811460ea57600080fd5b939250505056fea2646970667358221220986f251d4075ce92271f1941774010b4b15f973ef37f152c539f8e838fd19ce464736f6c63430008140033608060405234801561001057600080fd5b5060405161045b38038061045b83398101604081905261002f91610160565b806001600160a01b038116610063576000604051631e4fbdf760e01b815260040161005a9190610193565b60405180910390fd5b61006c8161007d565b50610076826100cd565b50506101a7565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b806001600160a01b03163b6000036100fa578060405163211eb15960e21b815260040161005a9190610193565b600180546001600160a01b0319166001600160a01b0383169081179091556040517fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b80516001600160a01b038116811461015b57600080fd5b919050565b6000806040838503121561017357600080fd5b61017c83610144565b915061018a60208401610144565b90509250929050565b6001600160a01b0391909116815260200190565b6102a5806101b66000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80633659cfe61461005c5780635c60da1b14610071578063715018a6146100945780638da5cb5b1461009c578063f2fde38b146100a4575b600080fd5b61006f61006a36600461022b565b6100b7565b005b6001546001600160a01b03165b60405161008b919061025b565b60405180910390f35b61006f6100cb565b61007e6100df565b61006f6100b236600461022b565b6100ee565b6100bf610132565b6100c881610164565b50565b6100d3610132565b6100dd60006101db565b565b6000546001600160a01b031690565b6100f6610132565b6001600160a01b038116610129576000604051631e4fbdf760e01b8152600401610120919061025b565b60405180910390fd5b6100c8816101db565b3361013b6100df565b6001600160a01b0316146100dd573360405163118cdaa760e01b8152600401610120919061025b565b806001600160a01b03163b600003610191578060405163211eb15960e21b8152600401610120919061025b565b600180546001600160a01b0319166001600160a01b0383169081179091556040517fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006020828403121561023d57600080fd5b81356001600160a01b038116811461025457600080fd5b9392505050565b6001600160a01b039190911681526020019056fea26469706673582212202ee2b89d96094391782842b0cdf3533e06f0dc733bd57d969ac3d7009da714d864736f6c6343000814003353667457726170706564546f6b656e466163746f72793a20696e76616c696420a26469706673582212200b5fee5e43678a00939053c9fcba1758b55b6038f0b4031495b2389ab1be5f8364736f6c63430008140033",
  "deployedBytecode": "0x60806040523480156200001157600080fd5b5060043610620001125760003560e01c806302bc365c146200011757806306419fe514620001305780630c340a2414620001475780630ddcef5314620001735780630e18b681146200018a578063238efcbc146200019457806326782247146200019e57806337547a9714620001b257806361ffdf4014620001e95780636b683896146200021357806375829def146200022a578063a04c50791462000241578063a844babb1462000258578063a85ab65d14620002aa578063aaebc53714620002c1578063bc47eb1d14620002d8578063d38bfff414620002ef578063d820ff111462000306578063e3056a34146200031d578063f851a4401462000331575b600080fd5b6200012e6200012836600462001628565b62000345565b005b6200012e62000141366004620016bd565b620004e2565b6002546200015b906001600160a01b031681565b6040516200016a919062001714565b60405180910390f35b6200015b6200018436600462001728565b62000592565b6200012e620005c8565b6200012e6200068d565b6001546200015b906001600160a01b031681565b6200015b620001c336600462001768565b60066020908152600092835260408084209091529082529020546001600160a01b031681565b62000200620001fa36600462001797565b6200072e565b6040516200016a95949392919062001812565b6200015b6200022436600462001728565b62000889565b6200012e6200023b36600462001797565b620008bc565b6200012e62000252366004620016bd565b62000954565b6200029a6200026936600462001728565b8051602081830181018051600482529282019190930120915280546001909101546001600160a01b03918216911682565b6040516200016a92919062001866565b6200015b620002bb36600462001880565b62000a62565b6200015b620002d236600462001728565b62001049565b6200015b620002e936600462001628565b6200122e565b6200012e6200030036600462001797565b62001284565b6200012e6200031736600462001728565b6200131c565b6003546200015b906001600160a01b031681565b6000546200015b906001600160a01b031681565b6002546001600160a01b031633146200037b5760405162461bcd60e51b8152600401620003729062001968565b60405180910390fd5b60006004836040516200038f91906200198f565b908152602001604051809103902060020182604051620003b091906200198f565b908152604051908190036020019020546001600160a01b03169050806200042d5760405162461bcd60e51b815260206004820152602a60248201527f53667457726170706564546f6b656e466163746f72793a2070726f7879206e6f6044820152691d0819195c1b1bde595960b21b606482015260840162000372565b6004836040516200043f91906200198f565b9081526020016040518091039020600201826040516200046091906200198f565b90815260405190819003602001812080546001600160a01b03191690556001600160a01b03821690620004959084906200198f565b604051809103902084604051620004ad91906200198f565b604051908190038120907f72871655cb8e08a51370cd107b066dc7fa642b39f87eba10447580209c3207cc90600090a4505050565b6000546001600160a01b031633146200050f5760405162461bcd60e51b81526004016200037290620019ad565b806004836040516200052291906200198f565b90815260405190819003602001812080546001600160a01b039384166001600160a01b0319909116179055908216906200055e9084906200198f565b604051908190038120907f70cc12b129d10f00c73743b4313ad6997088babca4be2b6732a960391203c31f90600090a35050565b6000600482604051620005a691906200198f565b908152604051908190036020019020600101546001600160a01b031692915050565b6001546001600160a01b03163314620006195760405162461bcd60e51b815260206004820152601260248201527137b7363c903832b73234b7339030b236b4b760711b604482015260640162000372565b6000546001546040517ff9ffabca9c8276e99321725bcb43fb076a6c66a54b7f21c4e8146d8519b417dc926200065e926001600160a01b039182169291169062001866565b60405180910390a160018054600080546001600160a01b03199081166001600160a01b03841617909155169055565b6003546001600160a01b03163314620006ba5760405162461bcd60e51b8152600401620003729062001968565b6002546003546040517f1ba669d4a78521f2ad26e8e0fcbcdd626a63f34d68f326bc232a3abe2a5d042a92620006ff926001600160a01b039182169291169062001866565b60405180910390a160038054600280546001600160a01b03199081166001600160a01b03841617909155169055565b6005602052600090815260409020805481906200074b90620019d1565b80601f01602080910402602001604051908101604052809291908181526020018280546200077990620019d1565b8015620007ca5780601f106200079e57610100808354040283529160200191620007ca565b820191906000526020600020905b815481529060010190602001808311620007ac57829003601f168201915b505050505090806001018054620007e190620019d1565b80601f01602080910402602001604051908101604052809291908181526020018280546200080f90620019d1565b8015620008605780601f10620008345761010080835404028352916020019162000860565b820191906000526020600020905b8154815290600101906020018083116200084257829003601f168201915b505050506002830154600384015460049094015492936001600160a01b03918216939092501685565b60006004826040516200089d91906200198f565b908152604051908190036020019020546001600160a01b031692915050565b6000546001600160a01b03163314620008e95760405162461bcd60e51b81526004016200037290620019ad565b6001546040517fca4f2f25d0898edd99413412fb94012f9e54ec8142f9b093e7720646a95b16a9916200092a916001600160a01b0390911690849062001866565b60405180910390a1600180546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b03163314620009815760405162461bcd60e51b81526004016200037290620019ad565b60006004836040516200099591906200198f565b9081526040519081900360200181206001015463f2fde38b60e01b82526001600160a01b03169150819063f2fde38b90620009d590859060040162001714565b600060405180830381600087803b158015620009f057600080fd5b505af115801562000a05573d6000803e3d6000fd5b50505050816001600160a01b0316816001600160a01b03168460405162000a2d91906200198f565b604051908190038120907fc69903c0cec4f4503aa4496d78dcbf9f6e045679a04c0e921b7bad8e72b209d090600090a4505050565b6002546000906001600160a01b0316331462000a925760405162461bcd60e51b8152600401620003729062001968565b6001600160a01b03841662000af55760405162461bcd60e51b815260206004820152603360248201526000805160206200261f8339815191526044820152727772617070656420736674206164647265737360681b606482015260840162000372565b6001600160a01b03821662000b575760405162461bcd60e51b815260206004820152603260248201526000805160206200261f8339815191526044820152716e6176206f7261636c65206164647265737360701b606482015260840162000372565b6001600160a01b038481166000908152600660209081526040808320878452909152902054161562000bed5760405162461bcd60e51b815260206004820152603860248201527f53667457726170706564546f6b656e466163746f72793a2053667457726170706044820152771959151bdad95b88185b1c9958591e4819195c1b1bde595960421b606482015260840162000372565b600060048960405162000c0191906200198f565b9081526040519081900360200181209150600090600283019062000c27908b906200198f565b908152604051908190036020019020546001600160a01b03161462000ca85760405162461bcd60e51b815260206004820152603060248201527f53667457726170706564546f6b656e466163746f72793a2070726f647563742060448201526f185b1c9958591e4819195c1b1bde595960821b606482015260840162000372565b60018101546001600160a01b031662000d185760405162461bcd60e51b815260206004820152602b60248201527f53667457726170706564546f6b656e466163746f72793a20626561636f6e206e60448201526a1bdd0819195c1b1bde595960aa1b606482015260840162000372565b6001810154604080516000815260208101918290526001600160a01b03909216919062000d459062001562565b62000d5292919062001a0d565b604051809103906000f08015801562000d6f573d6000803e3d6000fd5b5091506000878787878760405160240162000d8f95949392919062001812565b60408051601f198184030181529181526020820180516001600160e01b03166350eeb51760e11b179052519091506000906001600160a01b0385169062000dd89084906200198f565b6000604051808303816000865af19150503d806000811462000e17576040519150601f19603f3d011682016040523d82523d6000602084013e62000e1c565b606091505b505090508062000e855760405162461bcd60e51b815260206004820152602d60248201527f53667457726170706564546f6b656e466163746f72793a20696e697469616c6960448201526c1e985d1a5bdb8819985a5b1959609a1b606482015260840162000372565b83836002018b60405162000e9a91906200198f565b90815260405190819003602001812080546001600160a01b039384166001600160a01b03199091161790559085169062000ed6908c906200198f565b60405180910390208c60405162000eee91906200198f565b604051908190038120907fc30ce88f5e35e9e52ef522887407c7e48fc30575f887289cd41d63bbc665e7ec90600090a46040805160a0810182528a815260208082018b90526001600160a01b03808b1683850152606083018a90528881166080840152871660009081526005909152919091208151819062000f71908262001a86565b506020820151600182019062000f88908262001a86565b506040828101516002830180546001600160a01b03199081166001600160a01b039384161790915560608501516003850155608090940151600490930180548516938216939093179092558982166000818152600660209081528382208c83529052829020805490941692881692831790935551909188917fc8a272a7f3a153b04ab11279ddaf18e6b898f114aa17a8b329630d37e9a6c5729062001033908e908e908c9062001b52565b60405180910390a4505050979650505050505050565b600080546001600160a01b03163314620010775760405162461bcd60e51b81526004016200037290620019ad565b60006004836040516200108b91906200198f565b908152604051908190036020019020546001600160a01b0316905080620010c65760405162461bcd60e51b8152600401620003729062001b94565b60006001600160a01b0316600484604051620010e391906200198f565b908152604051908190036020019020600101546001600160a01b031614620011665760405162461bcd60e51b815260206004820152602f60248201527f53667457726170706564546f6b656e466163746f72793a20626561636f6e206160448201526e1b1c9958591e4819195c1b1bde5959608a1b606482015260840162000372565b8030604051620011769062001570565b6200118392919062001866565b604051809103906000f080158015620011a0573d6000803e3d6000fd5b50915081600484604051620011b691906200198f565b90815260405190819003602001812060010180546001600160a01b039384166001600160a01b031990911617905582821691841690620011f89086906200198f565b604051908190038120907fcd7ef590b717071b3f540fe9b93410b1e56b126b254fe215336ea709fba59b2190600090a450919050565b60006004836040516200124291906200198f565b9081526020016040518091039020600201826040516200126391906200198f565b908152604051908190036020019020546001600160a01b0316905092915050565b6002546001600160a01b03163314620012b15760405162461bcd60e51b8152600401620003729062001968565b6003546040517f7d767be5a57784412a13945bd5114db84487d2b007bfcdb2f449fc9ea35437f791620012f2916001600160a01b0390911690849062001866565b60405180910390a1600380546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b03163314620013495760405162461bcd60e51b81526004016200037290620019ad565b60006004826040516200135d91906200198f565b908152604051908190036020018120546001600160a01b031691506000906004906200138b9085906200198f565b908152604051908190036020019020600101546001600160a01b0390811691508216620013cc5760405162461bcd60e51b8152600401620003729062001b94565b816001600160a01b0316816001600160a01b0316635c60da1b6040518163ffffffff1660e01b8152600401602060405180830381865afa15801562001415573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200143b919062001be7565b6001600160a01b031603620014a75760405162461bcd60e51b815260206004820152602b60248201527f53667457726170706564546f6b656e466163746f72793a2073616d6520696d7060448201526a3632b6b2b73a30ba34b7b760a91b606482015260840162000372565b604051631b2ce7f360e11b81526001600160a01b03821690633659cfe690620014d590859060040162001714565b600060405180830381600087803b158015620014f057600080fd5b505af115801562001505573d6000803e3d6000fd5b50505050816001600160a01b0316816001600160a01b0316846040516200152d91906200198f565b604051908190038120907fc73db28a0b1cf26933458afb626169fba2899e9fb8b2dd91ceac16f1f815d85290600090a4505050565b6105bc8062001c0883390190565b61045b80620021c483390190565b634e487b7160e01b600052604160045260246000fd5b600082601f830112620015a657600080fd5b81356001600160401b0380821115620015c357620015c36200157e565b604051601f8301601f19908116603f01168101908282118183101715620015ee57620015ee6200157e565b816040528381528660208588010111156200160857600080fd5b836020870160208301376000602085830101528094505050505092915050565b600080604083850312156200163c57600080fd5b82356001600160401b03808211156200165457600080fd5b620016628683870162001594565b935060208501359150808211156200167957600080fd5b50620016888582860162001594565b9150509250929050565b6001600160a01b0381168114620016a857600080fd5b50565b8035620016b88162001692565b919050565b60008060408385031215620016d157600080fd5b82356001600160401b03811115620016e857600080fd5b620016f68582860162001594565b9250506020830135620017098162001692565b809150509250929050565b6001600160a01b0391909116815260200190565b6000602082840312156200173b57600080fd5b81356001600160401b038111156200175257600080fd5b620017608482850162001594565b949350505050565b600080604083850312156200177c57600080fd5b8235620017898162001692565b946020939093013593505050565b600060208284031215620017aa57600080fd5b8135620017b78162001692565b9392505050565b60005b83811015620017db578181015183820152602001620017c1565b50506000910152565b60008151808452620017fe816020860160208601620017be565b601f01601f19169290920160200192915050565b60a0815260006200182760a0830188620017e4565b82810360208401526200183b8188620017e4565b6001600160a01b03968716604085015260608401959095525050921660809092019190915292915050565b6001600160a01b0392831681529116602082015260400190565b600080600080600080600060e0888a0312156200189c57600080fd5b87356001600160401b0380821115620018b457600080fd5b620018c28b838c0162001594565b985060208a0135915080821115620018d957600080fd5b620018e78b838c0162001594565b975060408a0135915080821115620018fe57600080fd5b6200190c8b838c0162001594565b965060608a01359150808211156200192357600080fd5b50620019328a828b0162001594565b9450506200194360808901620016ab565b925060a088013591506200195a60c08901620016ab565b905092959891949750929550565b6020808252600d908201526c37b7363c9033b7bb32b93737b960991b604082015260600190565b60008251620019a3818460208701620017be565b9190910192915050565b6020808252600a908201526937b7363c9030b236b4b760b11b604082015260600190565b600181811c90821680620019e657607f821691505b60208210810362001a0757634e487b7160e01b600052602260045260246000fd5b50919050565b6001600160a01b03831681526040602082018190526000906200176090830184620017e4565b601f82111562001a8157600081815260208120601f850160051c8101602086101562001a5c5750805b601f850160051c820191505b8181101562001a7d5782815560010162001a68565b5050505b505050565b81516001600160401b0381111562001aa25762001aa26200157e565b62001aba8162001ab38454620019d1565b8462001a33565b602080601f83116001811462001af2576000841562001ad95750858301515b600019600386901b1c1916600185901b17855562001a7d565b600085815260208120601f198616915b8281101562001b235788860151825594840194600190910190840162001b02565b508582101562001b425787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60608152600062001b676060830186620017e4565b828103602084015262001b7b8186620017e4565b91505060018060a01b0383166040830152949350505050565b60208082526033908201527f53667457726170706564546f6b656e466163746f72793a20696d706c656d656e6040820152721d185d1a5bdb881b9bdd0819195c1b1bde5959606a1b606082015260800190565b60006020828403121562001bfa57600080fd5b8151620017b7816200169256fe60a06040526040516105bc3803806105bc83398101604081905261002291610370565b61002c828261003e565b506001600160a01b031660805261047b565b610047826100fe565b6040516001600160a01b038316907f1cf3b03a6cf19fa2baba4df148e9dcabedea7f8a5c07840e207e5c089be95d3e90600090a28051156100f2576100ed826001600160a01b0316635c60da1b6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156100c3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100e79190610430565b82610203565b505050565b6100fa61027a565b5050565b806001600160a01b03163b6000036101345780604051631933b43b60e21b815260040161012b919061044b565b60405180910390fd5b807fa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d5080546001600160a01b0319166001600160a01b0392831617905560408051635c60da1b60e01b81529051600092841691635c60da1b9160048083019260209291908290030181865afa1580156101b0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101d49190610430565b9050806001600160a01b03163b6000036100fa5780604051634c9c8ce360e01b815260040161012b919061044b565b6060600080846001600160a01b031684604051610220919061045f565b600060405180830381855af49150503d806000811461025b576040519150601f19603f3d011682016040523d82523d6000602084013e610260565b606091505b50909250905061027185838361029b565b95945050505050565b34156102995760405163b398979f60e01b815260040160405180910390fd5b565b6060826102b0576102ab826102f1565b6102ea565b81511580156102c757506001600160a01b0384163b155b156102e75783604051639996b31560e01b815260040161012b919061044b565b50805b9392505050565b8051156103015780518082602001fd5b604051630a12f52160e11b815260040160405180910390fd5b80516001600160a01b038116811461033157600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b60005b8381101561036757818101518382015260200161034f565b50506000910152565b6000806040838503121561038357600080fd5b61038c8361031a565b60208401519092506001600160401b03808211156103a957600080fd5b818501915085601f8301126103bd57600080fd5b8151818111156103cf576103cf610336565b604051601f8201601f19908116603f011681019083821181831017156103f7576103f7610336565b8160405282815288602084870101111561041057600080fd5b61042183602083016020880161034c565b80955050505050509250929050565b60006020828403121561044257600080fd5b6102ea8261031a565b6001600160a01b0391909116815260200190565b6000825161047181846020870161034c565b9190910192915050565b6080516101276104956000396000601e01526101276000f3fe6080604052600a600c565b005b60186014601a565b60a0565b565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316635c60da1b6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156079573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190609b919060c3565b905090565b3660008037600080366000845af43d6000803e80801560be573d6000f35b3d6000fd5b60006020828403121560d457600080fd5b81516001600160a01b038116811460ea57600080fd5b939250505056fea2646970667358221220986f251d4075ce92271f1941774010b4b15f973ef37f152c539f8e838fd19ce464736f6c63430008140033608060405234801561001057600080fd5b5060405161045b38038061045b83398101604081905261002f91610160565b806001600160a01b038116610063576000604051631e4fbdf760e01b815260040161005a9190610193565b60405180910390fd5b61006c8161007d565b50610076826100cd565b50506101a7565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b806001600160a01b03163b6000036100fa578060405163211eb15960e21b815260040161005a9190610193565b600180546001600160a01b0319166001600160a01b0383169081179091556040517fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b80516001600160a01b038116811461015b57600080fd5b919050565b6000806040838503121561017357600080fd5b61017c83610144565b915061018a60208401610144565b90509250929050565b6001600160a01b0391909116815260200190565b6102a5806101b66000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80633659cfe61461005c5780635c60da1b14610071578063715018a6146100945780638da5cb5b1461009c578063f2fde38b146100a4575b600080fd5b61006f61006a36600461022b565b6100b7565b005b6001546001600160a01b03165b60405161008b919061025b565b60405180910390f35b61006f6100cb565b61007e6100df565b61006f6100b236600461022b565b6100ee565b6100bf610132565b6100c881610164565b50565b6100d3610132565b6100dd60006101db565b565b6000546001600160a01b031690565b6100f6610132565b6001600160a01b038116610129576000604051631e4fbdf760e01b8152600401610120919061025b565b60405180910390fd5b6100c8816101db565b3361013b6100df565b6001600160a01b0316146100dd573360405163118cdaa760e01b8152600401610120919061025b565b806001600160a01b03163b600003610191578060405163211eb15960e21b8152600401610120919061025b565b600180546001600160a01b0319166001600160a01b0383169081179091556040517fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006020828403121561023d57600080fd5b81356001600160a01b038116811461025457600080fd5b9392505050565b6001600160a01b039190911681526020019056fea26469706673582212202ee2b89d96094391782842b0cdf3533e06f0dc733bd57d969ac3d7009da714d864736f6c6343000814003353667457726170706564546f6b656e466163746f72793a20696e76616c696420a26469706673582212200b5fee5e43678a00939053c9fcba1758b55b6038f0b4031495b2389ab1be5f8364736f6c63430008140033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 4970,
        "contract": "contracts/SftWrappedTokenFactory.sol:SftWrappedTokenFactory",
        "label": "admin",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 4972,
        "contract": "contracts/SftWrappedTokenFactory.sol:SftWrappedTokenFactory",
        "label": "pendingAdmin",
        "offset": 0,
        "slot": "1",
        "type": "t_address"
      },
      {
        "astId": 5183,
        "contract": "contracts/SftWrappedTokenFactory.sol:SftWrappedTokenFactory",
        "label": "governor",
        "offset": 0,
        "slot": "2",
        "type": "t_address"
      },
      {
        "astId": 5185,
        "contract": "contracts/SftWrappedTokenFactory.sol:SftWrappedTokenFactory",
        "label": "pendingGovernor",
        "offset": 0,
        "slot": "3",
        "type": "t_address"
      },
      {
        "astId": 4497,
        "contract": "contracts/SftWrappedTokenFactory.sol:SftWrappedTokenFactory",
        "label": "productTypes",
        "offset": 0,
        "slot": "4",
        "type": "t_mapping(t_string_memory_ptr,t_struct(ProductType)4481_storage)"
      },
      {
        "astId": 4502,
        "contract": "contracts/SftWrappedTokenFactory.sol:SftWrappedTokenFactory",
        "label": "sftWrappedTokenInfos",
        "offset": 0,
        "slot": "5",
        "type": "t_mapping(t_address,t_struct(SftWrappedTokenInfo)4492_storage)"
      },
      {
        "astId": 4508,
        "contract": "contracts/SftWrappedTokenFactory.sol:SftWrappedTokenFactory",
        "label": "sftWrappedTokens",
        "offset": 0,
        "slot": "6",
        "type": "t_mapping(t_address,t_mapping(t_uint256,t_address))"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_mapping(t_uint256,t_address))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(uint256 => address))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_uint256,t_address)"
      },
      "t_mapping(t_address,t_struct(SftWrappedTokenInfo)4492_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct SftWrappedTokenFactory.SftWrappedTokenInfo)",
        "numberOfBytes": "32",
        "value": "t_struct(SftWrappedTokenInfo)4492_storage"
      },
      "t_mapping(t_string_memory_ptr,t_address)": {
        "encoding": "mapping",
        "key": "t_string_memory_ptr",
        "label": "mapping(string => address)",
        "numberOfBytes": "32",
        "value": "t_address"
      },
      "t_mapping(t_string_memory_ptr,t_struct(ProductType)4481_storage)": {
        "encoding": "mapping",
        "key": "t_string_memory_ptr",
        "label": "mapping(string => struct SftWrappedTokenFactory.ProductType)",
        "numberOfBytes": "32",
        "value": "t_struct(ProductType)4481_storage"
      },
      "t_mapping(t_uint256,t_address)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => address)",
        "numberOfBytes": "32",
        "value": "t_address"
      },
      "t_string_memory_ptr": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(ProductType)4481_storage": {
        "encoding": "inplace",
        "label": "struct SftWrappedTokenFactory.ProductType",
        "members": [
          {
            "astId": 4474,
            "contract": "contracts/SftWrappedTokenFactory.sol:SftWrappedTokenFactory",
            "label": "implementation",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 4476,
            "contract": "contracts/SftWrappedTokenFactory.sol:SftWrappedTokenFactory",
            "label": "beacon",
            "offset": 0,
            "slot": "1",
            "type": "t_address"
          },
          {
            "astId": 4480,
            "contract": "contracts/SftWrappedTokenFactory.sol:SftWrappedTokenFactory",
            "label": "proxies",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_string_memory_ptr,t_address)"
          }
        ],
        "numberOfBytes": "96"
      },
      "t_struct(SftWrappedTokenInfo)4492_storage": {
        "encoding": "inplace",
        "label": "struct SftWrappedTokenFactory.SftWrappedTokenInfo",
        "members": [
          {
            "astId": 4483,
            "contract": "contracts/SftWrappedTokenFactory.sol:SftWrappedTokenFactory",
            "label": "name",
            "offset": 0,
            "slot": "0",
            "type": "t_string_storage"
          },
          {
            "astId": 4485,
            "contract": "contracts/SftWrappedTokenFactory.sol:SftWrappedTokenFactory",
            "label": "symbol",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage"
          },
          {
            "astId": 4487,
            "contract": "contracts/SftWrappedTokenFactory.sol:SftWrappedTokenFactory",
            "label": "wrappedSft",
            "offset": 0,
            "slot": "2",
            "type": "t_address"
          },
          {
            "astId": 4489,
            "contract": "contracts/SftWrappedTokenFactory.sol:SftWrappedTokenFactory",
            "label": "wrappedSftSlot",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          },
          {
            "astId": 4491,
            "contract": "contracts/SftWrappedTokenFactory.sol:SftWrappedTokenFactory",
            "label": "navOracle",
            "offset": 0,
            "slot": "4",
            "type": "t_address"
          }
        ],
        "numberOfBytes": "160"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}